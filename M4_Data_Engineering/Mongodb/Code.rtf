{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Switching to the new database\
use ecommerceIndiaDB;\
\
// Creating new collections\
db.createCollection("customers");\
db.createCollection("purchases");\
db.createCollection("inventory");\
db.createCollection("storageLocations");\
\
// Inserting data to the customers collection\
db.customers.insertMany([\
  \{\
    customerId: "C001",\
    name: "Ravi Kumar",\
    email: "ravi.kumar@example.com",\
    age: 30,\
    address: \{\
      city: "Mumbai",\
      state: "Maharashtra",\
      zip: "400001"\
    \},\
    joinedAt: new ISODate("2024-01-15T11:00:00Z")\
  \},\
  \{\
    customerId: "C002",\
    name: "Anita Sharma",\
    email: "anita.sharma@example.com",\
    age: 27,\
    address: \{\
      city: "Delhi",\
      state: "Delhi",\
      zip: "110001"\
    \},\
    joinedAt: new ISODate("2024-02-10T14:00:00Z")\
  \},\
  \{\
    customerId: "C003",\
    name: "Kiran Das",\
    email: "kiran.das@example.com",\
    age: 35,\
    address: \{\
      city: "Bangalore",\
      state: "Karnataka",\
      zip: "560001"\
    \},\
    joinedAt: new ISODate("2024-03-25T10:00:00Z")\
  \}\
]);\
\
// Inserting data to the purchases collection\
db.purchases.insertMany([\
  \{\
    purchaseId: "PUR001",\
    customerId: "C001",\
    purchaseDate: new ISODate("2024-12-15T13:30:00Z"),\
    items: [\
      \{ productId: "PR001", quantity: 1, price: 1500 \},\
      \{ productId: "PR002", quantity: 2, price: 800 \}\
    ],\
    totalCost: 3100,\
    status: "Delivered"\
  \},\
  \{\
    purchaseId: "PUR002",\
    customerId: "C002",\
    purchaseDate: new ISODate("2024-12-08T15:45:00Z"),\
    items: [\
      \{ productId: "PR003", quantity: 1, price: 4500 \},\
      \{ productId: "PR001", quantity: 2, price: 3000 \}\
    ],\
    totalCost: 7500,\
    status: "Delivered"\
  \},\
  \{\
    purchaseId: "PUR003",\
    customerId: "C003",\
    purchaseDate: new ISODate("2024-12-22T09:20:00Z"),\
    items: [\
      \{ productId: "PR002", quantity: 3, price: 1200 \},\
      \{ productId: "PR004", quantity: 2, price: 7000 \}\
    ],\
    totalCost: 9400,\
    status: "Shipped"\
  \}\
]);\
\
// Inserting data to the inventory collection\
db.inventory.insertMany([\
  \{\
    productId: "PR001",\
    name: "Bluetooth Speaker",\
    category: "Electronics",\
    price: 1500,\
    stock: 300,\
    ratings: [\
      \{ customerId: "C002", rating: 4.8 \},\
      \{ customerId: "C003", rating: 4.0 \}\
    ]\
  \},\
  \{\
    productId: "PR002",\
    name: "Wireless Earbuds",\
    category: "Electronics",\
    price: 800,\
    stock: 250,\
    ratings: [\
      \{ customerId: "C001", rating: 4.5 \},\
      \{ customerId: "C003", rating: 4.2 \}\
    ]\
  \},\
  \{\
    productId: "PR003",\
    name: "Smartphone",\
    category: "Electronics",\
    price: 4500,\
    stock: 100,\
    ratings: [\
      \{ customerId: "C002", rating: 5.0 \},\
      \{ customerId: "C001", rating: 4.7 \}\
    ]\
  \},\
  \{\
    productId: "PR004",\
    name: "Laptop",\
    category: "Electronics",\
    price: 7000,\
    stock: 50,\
    ratings: [\
      \{ customerId: "C003", rating: 4.9 \},\
      \{ customerId: "C001", rating: 4.6 \}\
    ]\
  \}\
]);\
\
// Create Index for Geospatial Queries\
db.storageLocations.createIndex(\{ coordinates: "2dsphere" \});\
\
// Queries\
\
// 1. Find High-Spending Customers\
db.customers.aggregate([\
  \{\
    $lookup: \{\
      from: "purchases",\
      localField: "customerId",\
      foreignField: "customerId",\
      as: "customerPurchases"\
    \}\
  \},\
  \{\
    $unwind: "$customerPurchases"\
  \},\
  \{\
    $group: \{\
      _id: "$customerId",\
      name: \{ $first: "$name" \},\
      totalSpent: \{ $sum: "$customerPurchases.totalCost" \}\
    \}\
  \},\
  \{\
    $match: \{\
      totalSpent: \{ $gt: 5000 \}\
    \}\
  \},\
  \{\
    $project: \{\
      _id: 0,\
      customerId: "$_id",\
      name: 1,\
      totalSpent: 1\
    \}\
  \}\
]);\
\
// 2. List Popular Products by Average Rating\
db.inventory.aggregate([\
  \{\
    $unwind: "$ratings"\
  \},\
  \{\
    $group: \{\
      _id: "$productId",\
      name: \{ $first: "$name" \},\
      avgRating: \{ $avg: "$ratings.rating" \}\
    \}\
  \},\
  \{\
    $match: \{\
      avgRating: \{ $gte: 4 \}\
    \}\
  \},\
  \{\
    $project: \{\
      _id: 0,\
      productId: "$_id",\
      name: 1,\
      avgRating: 1\
    \}\
  \}\
]);\
\
// 3. Search for Purchases in a Specific Time Range\
db.purchases.aggregate([\
  \{\
    $match: \{\
      purchaseDate: \{\
        $gte: new ISODate("2024-12-01T00:00:00Z"),\
        $lte: new ISODate("2024-12-31T23:59:59Z")\
      \}\
    \}\
  \},\
  \{\
    $lookup: \{\
      from: "customers",\
      localField: "customerId",\
      foreignField: "customerId",\
      as: "customerDetails"\
    \}\
  \},\
  \{\
    $unwind: "$customerDetails"\
  \},\
  \{\
    $project: \{\
      _id: 0,\
      purchaseId: 1,\
      customerName: "$customerDetails.name",\
      purchaseDate: 1,\
      totalCost: 1,\
      status: 1\
    \}\
  \}\
]);\
\
// 4. Update Stock After Purchase Completion\
db.purchases.find(\{ purchaseId: "PUR001" \}).forEach(purchase => \{\
  purchase.items.forEach(item => \{\
    db.inventory.updateOne(\
      \{ productId: item.productId \},\
      \{ $inc: \{ stock: -item.quantity \} \}\
    );\
  \});\
\});\
\
// 5. Find Nearest Storage Location\
db.storageLocations.aggregate([\
  \{\
    $geoNear: \{\
      near: \{ type: "Point", coordinates: [72.8777, 19.0760] \},\
      distanceField: "distance",\
      maxDistance: 50000, // 50 kilometers in meters\
      spherical: true,\
      query: \{ products: "PR001" \}\
    \}\
  \},\
  \{\
    $project: \{\
      _id: 0,\
      storageId: 1,\
      distance: 1,\
      coordinates: 1\
    \}\
  \}\
]);\
}